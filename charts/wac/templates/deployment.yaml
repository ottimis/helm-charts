apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wac.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "wac.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  strategy:
    type: {{ .Values.updateStrategy }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "wac.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "wac.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- $hasNodeAff := not (empty .Values.deployment.nodeAffinity) }}
      {{- if or $hasNodeAff .Values.deployment.preventSameNode }}
      {{- if $hasNodeAff }}
      tolerations:
        {{- range $key, $value := .Values.deployment.nodeAffinity }}
        - key: {{ $key | quote }}
          operator: "Equal"
          value: {{ $value | quote }}
          effect: "NoSchedule"
        {{- end }}
      {{- end }}
      affinity:
        {{- if $hasNodeAff }}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  {{- range $key, $value := .Values.deployment.nodeAffinity }}
                  - key: {{ $key | quote }}
                    operator: In
                    values:
                      - {{ $value | quote }}
                  {{- end }}
        {{- end }}
        {{- if .Values.deployment.preventSameNode }}
        # 3) Anti-affinity to avoid to schedule on the same node
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - {{ include "wac.name" . | quote }}
                topologyKey: "kubernetes.io/hostname"
        {{- end }}
      {{- end }}

      {{/*
        For the moment we will allow root if sftp needed
        TODO: Remove this when we have a better solution
      */}}
      {{- if and .Values.preventRoot (eq .Values.sftp.enabled false) }}
      securityContext:
        fsGroup: {{ .Values.deployment.gid }}
        runAsUser: {{ .Values.deployment.uid }}
        runAsNonRoot: true
      {{- end }}
      {{- if .Values.deployment.serviceAccountName }}
      serviceAccountName: {{ .Values.deployment.serviceAccountName }}
      {{- end }}
      terminationGracePeriodSeconds: {{ add (default 0 .Values.deployment.gracefulShutdownSeconds) 10 }}
      containers:
        - name: {{ include "wac.name" . }}
          image: "{{ .Values.image.repository }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          ports:
            - containerPort: 8080
              name: http
          {{- if .Values.preventRoot }}
          securityContext:
            runAsUser: {{ .Values.deployment.uid }}
            runAsGroup: {{ .Values.deployment.gid }}
            runAsNonRoot: true
            allowPrivilegeEscalation: false
          {{- end }}
          {{- $gs := int (default 0 .Values.deployment.gracefulShutdownSeconds) }}
          {{- if gt $gs 0 }}
          lifecycle:
            preStop:
              exec:
                command: [ "/bin/sh", "-c", "sleep {{ $gs }}" ]
          {{- end }}
          envFrom:
            {{- range .Values.deployment. existingConfigMapsEnv }}
            - configMapRef:
                name: {{ . }}
            {{- end}}
            {{- range .Values.deployment.existingSecretsEnv }}
            - secretRef:
                name: {{ . }}
            {{- end}}
          volumeMounts:
            {{- if .Values.deployment.customIniCM }}
            - name: custom-ini
              mountPath: /usr/local/etc/php/conf.d/custom.ini
              subPath: custom.ini
            {{- end }}
            {{- if .Values.deployment.customHtaccessCM }}
            - name: custom-htaccess
              mountPath: /etc/apache2/custom/custom-htaccess.conf
              subPath: htaccess.conf
            {{- end }}
            {{- range $volume := .Values.volumes }}
            {{- range $mountPath := $volume.mountPaths }}
            - name: {{ include "wac.name" $ }}-{{ $volume.name }}
              mountPath: {{ $mountPath.path }}
              subPath: {{ $mountPath.name }}
            {{- end }}
            {{- end }}
        # Check if sftp is enabled and volumes is not empty
        {{- if and .Values.sftp.enabled (not (empty .Values.volumes)) }}
        - name: sftp
          image: atmoz/sftp
          volumeMounts:
            {{- range $volume := .Values.volumes }}
            {{- if $volume.sftpAccess }}
            {{- range $sftpUser := $.Values.sftp.users }}
            - name: {{ include "wac.name" $ }}-{{ $volume.name }}
              mountPath: /home/{{ $sftpUser.username }}/{{ $volume.name }}
            {{- end }}
            {{- end}}
            {{- end}}
            - name: sftp-config
              mountPath: /etc/sftp/users.conf
              subPath: users.conf
        {{- end }}
      volumes:
        {{- range .Values.volumes }}
        - name: {{ include "wac.name" $ }}-{{ .name }}
          {{- if .configMap }}
          configMap:
            name: {{ .configMap }}
          {{- else }}
          persistentVolumeClaim:
            claimName: {{ include "wac.name" $ }}-{{ .name }}
          {{- end }}
        {{- end }}

        {{- if .Values.deployment.customIniCM }}
        - name: custom-ini
          configMap:
            name: {{ .Values.deployment.customIniCM }}
            defaultMode: 0644
        {{- end }}
        {{- if .Values.sftp.enabled }}
        - name: sftp-config
          configMap:
            name: {{ include "wac.name" . }}-sftp
        {{- end }}
        {{- if .Values.deployment.customHtaccessCM }}
        - name: custom-htaccess
          configMap:
            name: {{ .Values.deployment.customHtaccessCM }}
        {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
