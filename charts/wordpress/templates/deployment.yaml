apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wordpress.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "wordpress.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  strategy:
    type: {{ .Values.updateStrategy }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "wordpress.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "wordpress.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{/*
        For the moment we will allow root if sftp needed
        TODO: Remove this when we have a better solution
      */}}
      {{- if and .Values.preventRoot (eq .Values.sftp.enabled false) }}
      securityContext:
        fsGroup: {{ .Values.deployment.gid }}
        runAsUser: {{ .Values.deployment.uid }}
        runAsNonRoot: true
      {{- end }}
      containers:
        - name: wordpress
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          ports:
            - containerPort: 8080
              name: http
          {{- if .Values.preventRoot }}
          securityContext:
            runAsUser: {{ .Values.deployment.uid }}
            runAsGroup: {{ .Values.deployment.gid }}
            runAsNonRoot: true
            allowPrivilegeEscalation: false
          {{- end }}
          env:
            - name: WORDPRESS_DB_HOST
              value: {{ .Values.database.host }}
            - name: WORDPRESS_DB_PORT
              value: {{ .Values.database.port | quote }}
            - name: WORDPRESS_DB_USER
              value: {{ .Values.database.user }}
            - name: WORDPRESS_DB_NAME
              value: {{ .Values.database.name }}
            - name: WORDPRESS_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.existingSecret }}
                  key: password
            - name: WORDPRESS_CONFIG_EXTRA
              value: |
                {{- if .Values.wordpress.memoryLimit }}
                define('WP_MEMORY_LIMIT', '{{ .Values.wordpress.memoryLimit }}');
                {{- end }}
            - name: WORDPRESS_URL
              value: {{ include "wordpress.url" . | quote }}
            - name: WORDPRESS_LOCALE
              value: {{ .Values.wordpress.locale | quote }}
            - name: WORDPRESS_TITLE
              value: {{ .Values.wordpress.title | quote }}
            - name: WORDPRESS_ADMIN_EMAIL
              value: {{ .Values.wordpress.adminEmail | quote }}
            - name: WORDPRESS_ADMIN_USER
              value: {{ .Values.wordpress.adminUser | quote }}
            - name: WORDPRESS_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "wordpress.secretName" . }}
                  key: password
          volumeMounts:
            - name: wordpress-data
              {{- if eq .Values.persistence.accessMode "ReadWriteOnce" }}
              mountPath: /var/www/html
              {{- else if eq .Values.persistence.accessMode "ReadWriteMany" }}
              mountPath: /var/www/html/wp-content
              {{- end }}
            {{- if and .Values.wordpress.cacheHost .Values.wordpress.cachePort }}
            - mountPath: /docker-entrypoint-init.d
              name: custom-postinit
            {{- end }}
            {{- if .Values.wordpress.customIniCM }}
            - name: custom-ini
              mountPath: /usr/local/etc/php/conf.d/custom.ini
              subPath: custom.ini
            {{- end }}
            {{- if .Values.wordpress.customHtaccessCM }}
            - name: custom-htaccess
              mountPath: /etc/apache2/custom/custom-htaccess.conf
              subPath: htaccess.conf
            {{- end }}
        {{- if .Values.sftp.enabled }}
        - name: sftp
          image: atmoz/sftp
          volumeMounts:
            {{- range .Values.sftp.users }}
            - name: wordpress-data
              mountPath: /home/{{ .username }}/data
            {{- end }}
            - name: sftp-config
              mountPath: /etc/sftp/users.conf
              subPath: users.conf
        {{- end }}
      volumes:
        - name: wordpress-data
          persistentVolumeClaim:
            claimName: {{ include "wordpress.name" . }}
        {{- if and .Values.wordpress.cacheHost .Values.wordpress.cachePort }}
        - name: custom-postinit
          configMap:
            name: {{ include "wordpress.name" . }}-postinit
            defaultMode: 0755
        {{- end }}
        {{- if .Values.wordpress.customIniCM }}
        - name: custom-ini
          configMap:
            name: {{ .Values.wordpress.customIniCM }}
            defaultMode: 0644
        {{- end }}
        {{- if .Values.sftp.enabled }}
        - name: sftp-config
          configMap:
            name: {{ include "wordpress.name" . }}-sftp
        {{- end }}
        {{- if .Values.wordpress.customHtaccessCM }}
        - name: custom-htaccess
          configMap:
            name: {{ .Values.wordpress.customHtaccessCM }}
        {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
